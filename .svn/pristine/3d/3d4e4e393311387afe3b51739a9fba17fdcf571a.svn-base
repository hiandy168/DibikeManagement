package com.Dibike.controller;

import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.Dibike.common.ExcelFileGenerator;
import com.Dibike.common.UtilDate;
import com.Dibike.service.BikeFaultService;

@Controller
@RequestMapping("/export")
public class ExportExcelController {
	private int pageSize = 15;// 每页显示条数
	@Resource 
	private BikeFaultService bikeFaultService;
	
 	
	@RequestMapping(value = "/excelBike_fault")
	@ResponseBody
	public String excelBike_fault(HttpServletResponse response,String number) throws Exception{
		//获取excel的标题数据
		List<String> fieldName = new ArrayList<String>();
		fieldName.add("自行车编号");
		fieldName.add("问题");
		fieldName.add("问题描述");
		fieldName.add("状态");
		fieldName.add("城市");
		fieldName.add("地址");
		fieldName.add("上报时间");
		//获取excel的内容数据
		int pageNum = Integer.parseInt(number);
		List<List<String>> fieldData = bikeFaultService.findList( pageNum, pageSize);
	    //2：调用封装的POI报表的导出类ExcelFileGenerator.java，完成excel报表的导出
		ExcelFileGenerator excelFileGenerator = new ExcelFileGenerator(fieldName, fieldData);
		/**导出报表的文件名*/
		String filename = "车辆故障明细报表（"+UtilDate.getDateFormatter()+"）.xls";
		//处理乱码
		try {
			filename = new String(filename.getBytes("gbk"),"iso-8859-1");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		/**response中进行设置，总结下载，导出，需要io流和头*/
		response.setContentType("application/vnd.ms-excel");
		response.setHeader("Content-disposition", "attachment;filename="+filename);
		response.setBufferSize(1024);
		//获取输出流
		OutputStream os = response.getOutputStream();
		excelFileGenerator.expordExcel(os);//使用输出流，导出
		return null;
	}
}




























